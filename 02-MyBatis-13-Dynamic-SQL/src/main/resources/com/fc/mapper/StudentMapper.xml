<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--映射文件，namespace命名空间：对应一个完全的全限定名，必须和对应的接口的路径相匹配-->
<mapper namespace="com.fc.dao.StudentDao">
    <!--声明一个可复用的sql片段-->
    <sql id="field">
        id, name, age, gender, birthday, info
    </sql>

    <select id="findAll" resultType="com.fc.entity.Student">
        select <include refid="field"/>
        from student
    </select>

    <select id="findById" resultType="com.fc.entity.Student">
        select <include refid="field"/>
        from student
    </select>

    <select id="findByKeyword" resultType="com.fc.entity.Student">
        select <include refid="field"/>
        from student
        where 1 = 1
        <if test="name != null">
            and name like #{name}
        </if>

        <if test="info != null">
            and info like #{info}
        </if>
    </select>

<!-- where标签能够自动去除多余的and和or   -->
    <select id="findByStudent" resultType="com.fc.entity.Student">
        select <include refid="field"/>
        from student
        <where>
            <if test="id != null">
                or id = #{id}
            </if>
            <if test="name != null">
                or name = #{name}
            </if>
            <if test="age != null">
                or age = #{age}
            </if>
            <if test="gender != null">
                or gender = #{gender}
            </if>
            <if test="birthday != null">
                or birthday = #{birthday}
            </if>
            <if test="info != null">
                or info = #{info}
            </if>

        </where>
    </select>

<!--    trim可以声明指定的前后缀以及忽略指定的前后缀-->
    <select id="findByStudentOnTrim" resultType="com.fc.entity.Student">
        select <include refid="field"/>
        from student
        <trim prefix="where" prefixOverrides="or">
            <if test="id != null">
                or id = #{id}
            </if>
            <if test="name != null">
                or name = #{name}
            </if>

            <if test="age != null">
                or age = #{age}
            </if>

            <if test="gender != null">
                or gender = #{gender}
            </if>

            <if test="birthday != null">
                or birthday = #{birthday}
            </if>

            <if test="info != null">
                or info = #{info}
            </if>
        </trim>
    </select>

    <update id="updateOnTrim">
        update student
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="info != null">
                info = #{info},
            </if>
        </set>
            where id = #{id}
    </update>

    <update id="update">
        update student
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="info != null">
                info = #{info},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteMore">
        delete from student where id in
        <foreach collection="array" separator="," open="(" close=")" index="i" item="id">
            #{id}
        </foreach>
    </delete>
</mapper>